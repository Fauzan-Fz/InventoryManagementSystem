<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1VRTbRjY/wEr3XIs09/7RQAAAABJRU5ErkJggg==
</value>
  </data>
</root>